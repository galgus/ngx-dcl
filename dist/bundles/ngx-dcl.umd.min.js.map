{"version":3,"sources":["../esm2015/src/app/src/app/modules/dcl/dcl.component.ts","../esm2015/src/app/src/app/modules/dcl/dcl.module.ts"],"names":["createComponent","cfr","type","vcr","bindings","projectableNodes","resolveComponentFactory","length","viewContainer","ctxInjector","parentInjector","Array","isArray","ReflectiveInjector","fromResolvedProviders","getInjector","DclComponent","_cr","_renderer","_elem","_view","this","prototype","ngOnInit","_cmpRef","element","nativeElement","appendChild","location","init","identifier","data","text","createText","undefined","ngOnChanges","changes","removeChild","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ComponentFactoryResolver","Renderer2","ElementRef","ViewContainerRef","Input","NgModule","imports","CommonModule","declarations","exports"],"mappings":"4WAUA,SAASA,EACPC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAOF,EAAIH,gBACTC,EAAIK,wBAAwBJ,GAC5BC,EAAII,OAMR,SACEC,EAAiCJ,GAEjC,IAAMK,EAAcD,EAAcE,eAClC,OAAQC,MAAMC,QAAQR,IAAaA,EAASG,OAAS,EACjDM,EAAAA,mBAAmBC,sBAAsBV,EAAUK,GACnDA,EAXFM,CAAYZ,EAAKC,GACjBC,oBA2BF,SAAAW,EACUC,EACAC,EACAC,EACAC,GAHAC,KAAAJ,IAAAA,EACAI,KAAAH,UAAAA,EACAG,KAAAF,MAAAA,EACAE,KAAAD,MAAAA,SAGVJ,EAAAM,UAAAC,SAAA,WACE,GAAIF,KAAKnB,KACPmB,KAAKG,QAAUxB,EAAgBqB,KAAKJ,IAAKI,KAAKnB,KAAMmB,KAAKD,OACzDC,KAAKD,MAAMK,QAAQC,cAAcC,YAC/BN,KAAKG,QAAQI,SAASF,eAEpBL,KAAKQ,MACPR,KAAKQ,KAAKR,KAAKG,QAASH,KAAKS,WAAYT,KAAKU,UAE3C,CACL,IAAMC,EAAOX,KAAKH,UAAUe,WAAyB,OAAdZ,KAAKU,WAA+BG,IAAdb,KAAKU,KAAqBV,KAAKU,KAAO,IACnGV,KAAKH,UAAUS,YAAYN,KAAKF,MAAMO,cAAeM,KAIzDhB,EAAAM,UAAAa,YAAA,SAAYC,GACNf,KAAKG,UACPH,KAAKD,MAAMK,QAAQC,cAAcW,YAC/BhB,KAAKG,QAAQI,SAASF,eAExBL,KAAKE,sCAzCVe,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAU,GACVC,gBAAiBC,EAAAA,wBAAwBC,oDAnCzCC,EAAAA,gCAA0BC,EAAAA,iBAAWC,EAAAA,kBAAYC,EAAAA,kDAuChDC,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,0BACAA,EAAAA,eC7BH,iCAXCC,EAAAA,SAAQX,KAAA,CAAC,CACRY,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZrC,GAEFsC,QAAS,CACPtC","sourcesContent":["import {\n  Component, OnInit, ComponentRef, ChangeDetectionStrategy, Input, Type,\n  ComponentFactoryResolver, Renderer2, ElementRef, ViewContainerRef, OnChanges,\n  SimpleChange, ResolvedReflectiveProvider, ReflectiveInjector\n} from '@angular/core';\n\n\nexport type InitFunc =\n    (component: ComponentRef<any>, identifier: any, data: any) => void;\n\nfunction createComponent(\n  cfr: ComponentFactoryResolver,\n  type: any,\n  vcr: ViewContainerRef,\n  bindings?: ResolvedReflectiveProvider[],\n  projectableNodes?: any[][]\n): ComponentRef<any> {\n  return vcr.createComponent(\n    cfr.resolveComponentFactory(type),\n    vcr.length,\n    getInjector(vcr, bindings),\n    projectableNodes\n  );\n}\n\nfunction getInjector(\n  viewContainer: ViewContainerRef, bindings?: ResolvedReflectiveProvider[]\n) {\n  const ctxInjector = viewContainer.parentInjector;\n  return (Array.isArray(bindings) && bindings.length > 0) ?\n      ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) :\n      ctxInjector;\n}\n\n@Component({\n  selector: 'app-dcl',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class DclComponent implements OnInit, OnChanges {\n  @Input() public type: Type<any>;\n  @Input() public init: InitFunc;\n  @Input() public data: any;\n  @Input() public identifier: any;\n\n  private _cmpRef: ComponentRef<any>;\n\n  constructor(\n    private _cr: ComponentFactoryResolver,\n    private _renderer: Renderer2,\n    private _elem: ElementRef,\n    private _view: ViewContainerRef\n  ) { }\n\n  ngOnInit() {\n    if (this.type) {\n      this._cmpRef = createComponent(this._cr, this.type, this._view);\n      this._view.element.nativeElement.appendChild(\n        this._cmpRef.location.nativeElement\n      );\n      if (this.init) {\n        this.init(this._cmpRef, this.identifier, this.data);\n      }\n    } else {\n      const text = this._renderer.createText(this.data !== null && this.data !== undefined ? this.data : '');\n      this._renderer.appendChild(this._elem.nativeElement, text);\n    }\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    if (this._cmpRef) {\n      this._view.element.nativeElement.removeChild(\n        this._cmpRef.location.nativeElement\n      );\n      this.ngOnInit();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DclComponent } from './dcl.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DclComponent\n  ],\n  exports: [\n    DclComponent\n  ]\n})\nexport class DclModule { }\n"]}